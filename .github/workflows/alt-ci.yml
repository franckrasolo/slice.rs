name: Alt-CI

on:
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1

jobs:
  integration:
    name: Test crate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
#          - ubuntu-18.04
#          - macos-11.0
#          - macos-10.15
          - macos-10.13
        toolchain:
          - stable

    steps:
      - name: Checkout
        id: checkout
        run: |
          rm -rf "${{ github.workspace }}"
          git clone --recurse-submodules ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} .
          echo ::set-output name=hw_isa::$(uname -m)

      - name: Cache Cargo Artifacts
        uses: actions/cache@v2
        env:
          CACHE_KEY_PREFIX: ${{ matrix.os }}-${{ steps.checkout.outputs.hw_isa }}-cargo
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: |
            ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/Cargo.toml') }}-
            ${{ env.CACHE_KEY_PREFIX }}-

#      - name: Clippy
#        run: cargo clippy --all-targets --all-features -- -D warnings
#
#      - name: Unit Tests
#        run: cargo test --lib

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: clippy

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

      - name: Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib
